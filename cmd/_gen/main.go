package main

import (
	"github.com/akishichinibu/goadt/internal"
	"github.com/akishichinibu/goadt/internal/gen/tuple"
	"github.com/akishichinibu/goadt/internal/gen/union"
	j "github.com/dave/jennifer/jen"
)

const maxOrder = 10

func genUnion() error {
	f := j.NewFile("union")

	f.Comment("Code generated by goadt. DO NOT EDIT.")
	f.Comment("nolint")
	f.Line()

	for i := 2; i <= maxOrder; i++ {
		g := union.NewUnionGenerator(i)
		if err := g.Gen(f); err != nil {
			return err
		}
	}

	return f.Save("./pkg/union/union.gen.go")
}

func genTuple() error {
	f := j.NewFile("tuple")

	f.Comment("Code generated by goadt. DO NOT EDIT.")
	f.Comment("nolint")
	f.Line()

	for i := 2; i <= maxOrder; i++ {
		g := tuple.NewTupleGenerator(i)
		if err := g.Gen(f); err != nil {
			return err
		}
	}

	return f.Save("./pkg/tuple/tuple.gen.go")
}

func main() {
	if err := internal.ChainErr(
		genUnion,
		genTuple,
	); err != nil {
		panic(err)
	}
}
